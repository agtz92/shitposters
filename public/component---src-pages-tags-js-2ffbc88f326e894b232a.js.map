{"version":3,"sources":["webpack:///./src/layouts/layout-container.js","webpack:///./src/pages/tags.js"],"names":["LayoutContainer","children","Fragment","className","TagsPage","data","group","allMarkdownRemark","site","siteMetadata","title","color","map","tag","key","fieldValue","to","kebabCase","totalCount","pageQuery"],"mappings":"4FAAA,mFAKe,SAASA,EAAT,GAAwC,IAAbC,EAAY,EAAZA,SACxC,OACI,kBAAC,IAAMC,SAAP,KACI,yBAAKC,UAAU,iBACb,kBAAC,IAAD,MACI,yBAAKA,UAAU,oBACVF,GAET,kBAAC,IAAD,U,kCCbZ,mIA2DeG,UA/CE,SAAC,GAAD,QACfC,KACuBC,EAFR,EAEbC,kBAAqBD,MAFR,EAGbE,KACEC,aAAgBC,MAJL,OASb,kBAAC,IAAD,KACI,6BAEI,6BACA,kBAAC,IAAD,CAASC,MAAM,UAAf,kBACA,4BACKL,EAAMM,KAAI,SAAAC,GAAG,OACd,wBAAIC,IAAKD,EAAIE,YACT,kBAAC,IAAD,CAAMC,GAAE,SAAWC,IAAUJ,EAAIE,YAAzB,KACR,kBAAC,IAAD,CAASJ,MAAM,UAAUE,EAAIE,WAA7B,KAA2CF,EAAIK,WAA/C,eA+Bb,IAAMC,EAAS","file":"component---src-pages-tags-js-2ffbc88f326e894b232a.js","sourcesContent":["import React from \"react\"\r\nimport NavBar from \"../components/navbar\"\r\nimport Footer from \"../components/footer\";\r\n\r\n\r\nexport default function LayoutContainer({ children }) {\r\n  return (\r\n      <React.Fragment>\r\n          <div className=\"layout-holder\">\r\n            <NavBar/>\r\n                <div className=\"layout-container\">\r\n                    {children}\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n      </React.Fragment>\r\n    \r\n  )\r\n}","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport LayoutContainer from \"../layouts/layout-container\"\r\nimport Heading from \"../components/heading\"\r\n\r\n// Utilities\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\n// Components\r\n//import { Helmet } from \"react-helmet\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nconst TagsPage = ({\r\n  data: {\r\n    allMarkdownRemark: { group },\r\n    site: {\r\n      siteMetadata: { title },\r\n    },\r\n  },\r\n}) => (\r\n\r\n    <LayoutContainer>\r\n        <div>\r\n            \r\n            <div>\r\n            <Heading color=\"color1\">Todos los tags</Heading>\r\n            <ul>\r\n                {group.map(tag => (\r\n                <li key={tag.fieldValue}>\r\n                    <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\r\n                    <Heading color=\"color4\">{tag.fieldValue} ({tag.totalCount})</Heading>\r\n                    </Link>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n            </div>\r\n        </div>\r\n    </LayoutContainer>\r\n  \r\n)\r\n\r\nTagsPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      group: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          fieldValue: PropTypes.string.isRequired,\r\n          totalCount: PropTypes.number.isRequired,\r\n        }).isRequired\r\n      ),\r\n    }),\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n      }),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default TagsPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 2000) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}