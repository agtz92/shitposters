{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/infoblock.js","webpack:///./src/layouts/layout-container.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","Fragment","charSet","name","content","type","logoChico","color","map","node","slug","fields","title","frontmatter","featuredimage","short_description","key","to","img","description","tags","pageQuery","InfoBlock","props","className","src","loading","width","alt","tag1","tag2","tag3","LayoutContainer","children"],"mappings":"4FAAA,2JA4GeA,UAjGF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,QAEPH,EAFO,IAIf,OACE,kBAAC,IAAMK,SAAP,KACM,kBAAC,IAAD,KACM,0BAAMC,QAAQ,UACd,mCAASN,EAAT,eACA,0BAAMO,KAAK,cAAcC,QAAQ,8FACjC,4BAAQC,KAAK,uBAAb,qTASkBT,EATlB,qLAWuCU,IAXvC,qZAqByCA,IArBzC,sLA8BN,kBAAC,IAAD,KACA,6BACE,kBAAC,IAAD,CAASC,MAAM,QAAQP,GACvB,4BACGF,EAAMU,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAE,EAAUH,EAAKI,YAAfD,MACAE,EAAkBL,EAAKI,YAAvBC,cACAC,EAAsBN,EAAKI,YAA3BE,kBACAnB,EAAQF,EAARE,IACR,OACE,wBAAIoB,IAAKN,GACP,kBAAC,IAAD,CAAMO,GAAIP,GACR,kBAAC,IAAD,CAAWE,MAAOA,EAAOM,IAAKJ,EAAgBK,YAAaJ,EAAmBK,KAAMxB,UAU9F,kBAAC,IAAD,CAAMqB,GAAG,SAAQ,kBAAC,IAAD,CAASV,MAAM,UAAf,uBAiCtB,IAAMc,EAAS,c,kCC9GtB,qGASe,SAASC,EAAUC,GAC9B,OACI,yBAAKC,UAAU,kBACX,yBAAKA,UAAU,sBACf,yBAAKC,IAAKF,EAAML,IAAKQ,QAAQ,OAAOC,MAAM,MAAMC,IAAI,GAAGJ,UAAU,oBAE7D,yBAAKA,UAAU,0BACf,kBAAC,IAAD,CAASjB,MAAM,QAAQgB,EAAMX,OAC7B,6BAAMW,EAAMJ,aACZ,yBAAKK,UAAU,YACX,yBAAKA,UAAU,WAAWD,EAAMM,MAChC,yBAAKL,UAAU,WAAWD,EAAMO,MAChC,yBAAKN,UAAU,WAAWD,EAAMQ,W,kCCrBpD,mFAKe,SAASC,EAAT,GAAwC,IAAbC,EAAY,EAAZA,SACxC,OACI,kBAAC,IAAMhC,SAAP,KACI,yBAAKuB,UAAU,iBACb,kBAAC,IAAD,MACI,yBAAKA,UAAU,oBACVS,GAET,kBAAC,IAAD","file":"component---src-templates-tags-js-275d2e42e39e0f885153.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport LayoutContainer from \"../layouts/layout-container\"\r\nimport Heading from \"../components/heading\"\r\nimport InfoBlock from \"../components/infoblock\"\r\nimport logoChico from \"../images/logo_small.png\"\r\n\r\n// Components\r\nimport { Link, graphql } from \"gatsby\"\r\nconst perro = \"https://www.10datos.com/\"\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext\r\n  const { edges, totalCount } = data.allMarkdownRemark\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? \"\" : \"s\"\r\n  } en \"${tag}\"`\r\n\r\n  return (\r\n    <React.Fragment>\r\n          <Helmet >\r\n                <meta charSet=\"utf-8\" />\r\n                <title>\"{tag} | 10datos\"</title>\r\n                <meta name=\"description\" content=\"10datos.com tags promoción, entretenimiento y propagación de información de último minuto\" />\r\n                <script type=\"application/ld+json\">\r\n                  {`\r\n                {\r\n                  \"@context\": \"https://schema.org\",\r\n                  \"@type\": \"BlogPosting\",\r\n                  \"mainEntityOfPage\": {\r\n                    \"@type\": \"WebPage\",\r\n                    \"@id\":\\\"${perro}\\\"\r\n                  },\r\n                  \"headline\": \\\"${tag}\\\",\r\n                  \"description\": \"10datos.com promoción, entretenimiento y propagación de información de último minuto\",\r\n                  \"image\": \\\"https://www.10datos.com/${logoChico}\\\",  \r\n                  \"author\": {\r\n                    \"@type\": \"Organization\",\r\n                    \"name\": \"10datos.com\"\r\n                  },  \r\n                  \"publisher\": {\r\n                    \"@type\": \"Organization\",\r\n                    \"name\": \"10datos\",\r\n                    \"logo\": {\r\n                      \"@type\": \"ImageObject\",\r\n                      \"url\": \\\"https://www.10datos.com/${logoChico}\\\"\r\n                    }\r\n                  },\r\n                  \"datePublished\": \"Jan 2021\",\r\n                  \"dateModified\": \"Apr 2021\"\r\n                }\r\n                `}\r\n                </script>\r\n        </Helmet>\r\n          <LayoutContainer>\r\n          <div>\r\n            <Heading color=\"dark\">{tagHeader}</Heading>\r\n            <ul>\r\n              {edges.map(({ node }) => {\r\n                const { slug } = node.fields\r\n                const { title } = node.frontmatter\r\n                const { featuredimage } = node.frontmatter\r\n                const { short_description } = node.frontmatter\r\n                const { tag } = pageContext\r\n                return (\r\n                  <li key={slug}>\r\n                    <Link to={slug}>\r\n                      <InfoBlock title={title} img={featuredimage}  description={short_description} tags={tag}/>\r\n                    </Link>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n            {/*\r\n                    This links to a page that does not yet exist.\r\n                    You'll come back to it!\r\n                  */}\r\n            <Link to=\"/tags\"><Heading color=\"color1\">Todos los tags</Heading></Link>\r\n          </div>\r\n          </LayoutContainer>\r\n    </React.Fragment>\r\n    \r\n  )\r\n}\r\n\r\nTags.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n            }),\r\n            fields: PropTypes.shape({\r\n              slug: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            featuredimage\r\n            tags\r\n            title\r\n            categoria\r\n            short_description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React from \"react\"\r\nimport Heading from \"./heading\"\r\nimport '../styles/normalize.css'\r\nimport \"../styles/webflow.css\"\r\nimport \"../styles/soynuevo.webflow.css\"\r\n//import Img from \"gatsby-image\"\r\n\r\n\r\n\r\nexport default function InfoBlock(props) {\r\n    return(\r\n        <div className=\"div-large-post\">\r\n            <div className=\"div-img-large-post\">\r\n            <img src={props.img} loading=\"lazy\" width=\"250\" alt=\"\" className=\"img-large-post\"/>\r\n            </div>\r\n                <div className=\"div-large-post-content\">\r\n                <Heading color=\"dark\">{props.title}</Heading> \r\n                <div>{props.description}</div>\r\n                <div className=\"tags-div\">\r\n                    <div className=\"div-tag\">{props.tag1}</div>\r\n                    <div className=\"div-tag\">{props.tag2}</div>\r\n                    <div className=\"div-tag\">{props.tag3}</div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        \r\n    ) \r\n}","import React from \"react\"\r\nimport NavBar from \"../components/navbar\"\r\nimport Footer from \"../components/footer\";\r\n\r\n\r\nexport default function LayoutContainer({ children }) {\r\n  return (\r\n      <React.Fragment>\r\n          <div className=\"layout-holder\">\r\n            <NavBar/>\r\n                <div className=\"layout-container\">\r\n                    {children}\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n      </React.Fragment>\r\n    \r\n  )\r\n}"],"sourceRoot":""}